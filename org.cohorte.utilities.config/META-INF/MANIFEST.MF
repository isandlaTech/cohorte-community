Manifest-Version: 1.0
Bundle-ActivationPolicy: lazy
Bundle-Activator: org.cohorte.utilities.config.Activator
Bundle-ManifestVersion: 2
Bundle-Name: COHORTE :: Utilities :: Config
Bundle-RequiredExecutionEnvironment: JavaSE-1.8
Bundle-SymbolicName: org.cohorte.utilities.config
Bundle-Version: 1.0.0
Created-By: iPOJO 1.12.1
Export-Package: org.cohorte.utilities.config
Import-Package: org.apache.felix.ipojo;version="[1.12.1,2.0.0)", org.a
 pache.felix.ipojo.architecture;version="[1.12.1,2.0.0)", org.osgi.fra
 mework;version=1.3.0, org.osgi.service.cm;version=1.2, org.osgi.servi
 ce.log;version=1.3, org.psem2m.isolates.base, org.psem2m.isolates.con
 stants, org.psem2m.isolates.services.dirs, org.psem2m.utilities.files
 , org.psem2m.utilities.logging
iPOJO-Components: component { $name="Cohorte-CCpntPropertiesConfigurat
 ion-Factory" $classname="org.cohorte.utilities.config.providers.CCpnt
 PropertiesConfiguration" provides { }properties { property { $name="o
 rg.cohorte.config.current.filename" $field="pCurrentFilename" }proper
 ty { $name="org.cohorte.config.default.filename" $field="pDefaultFile
 name" }property { $name="org.cohorte.config.user.extension" $field="p
 UserExtension" }property { $name="org.cohorte.config.subdir.name" $fi
 eld="pSubdirName" }}requires { $field="pLogger" }callback { $transiti
 on="invalidate" $method="invalidate" }callback { $transition="validat
 e" $method="validate" }manipulation { $classname="org.cohorte.utiliti
 es.config.providers.CCpntPropertiesConfiguration" interface { $name="
 org.cohorte.utilities.config.IConfiguration" }field { $name="pContext
 " $type="org.osgi.framework.BundleContext" }field { $name="pCurrentFi
 lename" $type="java.lang.String" }field { $name="pDefaultFilename" $t
 ype="java.lang.String" }field { $name="pLogger" $type="org.psem2m.iso
 lates.base.IIsolateLoggerSvc" }field { $name="pProperties" $type="jav
 a.util.Properties" }field { $name="pSubdirName" $type="java.lang.Stri
 ng" }field { $name="pUserExtension" $type="java.lang.String" }method 
 { $name="clean" }method { $name="dump" $return="java.lang.String" }me
 thod { $name="getParam" $return="java.lang.String" $arguments="{java.
 lang.String}" $names="{aName}" }method { $name="getParam" $return="ja
 va.lang.String" $arguments="{java.lang.String,java.lang.String}" $nam
 es="{aName,aDefault}" }method { $name="hasParam" $return="boolean" $a
 rguments="{java.lang.String}" $names="{aName}" }method { $name="inval
 idate" }method { $name="getBaseDir" $return="java.io.File" }method { 
 $name="getDataDir" $return="java.io.File" }method { $name="getSubdirN
 ame" $return="java.lang.String" }method { $name="addFile" $arguments=
 "{java.util.List,java.io.File}" $names="{aList,aFile}" }method { $nam
 e="getConfigurationFiles" $return="java.io.File[]" }method { $name="v
 alidate" }method { $name="getIntergerParam" $return="java.lang.Intege
 r" $arguments="{java.lang.String}" $names="{aName}" }method { $name="
 getIntergerParam" $return="java.lang.Integer" $arguments="{java.lang.
 String,java.lang.Integer}" $names="{aName,aDefault}" }method { $name=
 "getIntergerParam" $return="int" $arguments="{java.lang.String,int}" 
 $names="{aName,aDefault}" }method { $name="getLongParam" $return="jav
 a.lang.Long" $arguments="{java.lang.String}" $names="{aName}" }method
  { $name="getLongParam" $return="java.lang.Long" $arguments="{java.la
 ng.String,java.lang.Long}" $names="{aName,aDefault}" }method { $name=
 "getLongParam" $return="long" $arguments="{java.lang.String,long}" $n
 ames="{aName,aDefault}" }method { $name="getBooleanParam" $return="ja
 va.lang.Boolean" $arguments="{java.lang.String}" $names="{aName}" }me
 thod { $name="getBooleanParam" $return="java.lang.Boolean" $arguments
 ="{java.lang.String,java.lang.Boolean}" $names="{aName,aDefault}" }me
 thod { $name="getBooleanParam" $return="boolean" $arguments="{java.la
 ng.String,boolean}" $names="{aName,aDefault}" }method { $name="getDou
 bleParam" $return="java.lang.Double" $arguments="{java.lang.String}" 
 $names="{aName}" }method { $name="getDoubleParam" $return="java.lang.
 Double" $arguments="{java.lang.String,java.lang.Double}" $names="{aNa
 me,aDefault}" }method { $name="getDoubleParam" $return="double" $argu
 ments="{java.lang.String,double}" $names="{aName,aDefault}" }inner { 
 $name="1" method { $name="accept" $return="boolean" $arguments="{java
 .io.File}" $names="{}" }}}}

